name: fastvec
version: 0.1.1
cabal-version: >=1.22
build-type: Custom
license: BSD3
license-file: LICENSE
copyright: Copyright (C) 2015 Artem M. Chirkin <chirkin@arch.ethz.ch>
maintainer: Artem M. Chirkin <chirkin@arch.ethz.ch>
stability: Experimental
homepage: http://www.ia.arch.ethz.ch/chirkin/
synopsis: Fast 2D-4D geometry utilizing SIMD
description:
    This library is an attempt to make fast 2D-4D geometry library that highly relies on SIMD extentions.
    The intention is to use the library in OpenGL programs.
    At this stage only x86_64 architecture is supported.
    All operations on vectors are imported from raw LLVM IR via "foreign import prim" mechanics.
    Currently a lot of avx instructions are used, so it will only run on modern machines.
    Vectors implement standard classes like Num, Fractional etc - all these operations are scalar;
    for vector operations like dot products or matrix products I use separate classes.
category: Math, Geometry
author: Artem M. Chirkin <chirkin@arch.ethz.ch>

extra-source-files:
    codegen/platformtest.cmm
extra-tmp-files:
    codegen/platformtest.o
    codegen/Platform.hs

source-repository head
    type: git
    location: git://github.com/achirkin/fastvec.git


flag sse
    description:
        Use SSE2 intrinsics
    default: True

flag avx
    description:
        Use avx intrinsics
    default: True

flag avx2
    description:
        Use avx2 intrinsics
    default: False

flag avx512
    description:
        Use avx512f intrinsics
    default: False

flag neon
    description:
        Use NEON intrinsics on arm machines (sorry, arm is not available yet)
    default: False


library

    if flag(avx512)
      cpp-options: -DUSING_VECTORS_AVX512 -DUSING_VECTORS_AVX2 -DUSING_VECTORS_AVX -DUSING_VECTORS_SSE
      ghc-options: -Wall -fllvm -O2 -mavx512f -fenable-rewrite-rules
    else
      if flag(avx2)
        cpp-options: -DUSING_VECTORS_AVX2 -DUSING_VECTORS_AVX -DUSING_VECTORS_SSE
        ghc-options: -Wall -fllvm -O2 -mavx2 -fenable-rewrite-rules
      else
        if flag(avx)
          cpp-options: -DUSING_VECTORS_AVX -DUSING_VECTORS_SSE
          ghc-options: -Wall -fllvm -O2 -mavx -fenable-rewrite-rules
        else
          if flag(sse)
            cpp-options: -DUSING_VECTORS_SSE
            ghc-options: -Wall -fllvm -O2 -msse2 -fenable-rewrite-rules
          else
            ghc-options: -Wall -fllvm -O2 -fenable-rewrite-rules

    if flag(neon)
      cpp-options: -DUSING_VECTORS_NEON


    exposed-modules:
        Data.Geometry
        Data.Geometry.VectorMath
    build-depends:
        base >=4.8.0.0 && <5,
        ghc-prim >=0.4 && <0.6
    default-language: Haskell2010
    hs-source-dirs: src
    other-modules:
        Data.Geometry.Types
        Data.Geometry.Prim.FloatX4
        Data.Geometry.Types.FloatX4


executable codegen-test

    if flag(avx512)
      cpp-options: -DUSING_VECTORS_AVX512 -DUSING_VECTORS_AVX2 -DUSING_VECTORS_AVX -DUSING_VECTORS_SSE
      ghc-options: -Wall -fllvm -O2 -mavx512f -fenable-rewrite-rules
    else
      if flag(avx2)
        cpp-options: -DUSING_VECTORS_AVX2 -DUSING_VECTORS_AVX -DUSING_VECTORS_SSE
        ghc-options: -Wall -fllvm -O2 -mavx2 -fenable-rewrite-rules
      else
        if flag(avx)
          cpp-options: -DUSING_VECTORS_AVX -DUSING_VECTORS_SSE
          ghc-options: -Wall -fllvm -O2 -mavx -fenable-rewrite-rules
        else
          if flag(sse)
            cpp-options: -DUSING_VECTORS_SSE
            ghc-options: -Wall -fllvm -O2 -msse2 -fenable-rewrite-rules
          else
            ghc-options: -Wall -fllvm -O2 -fenable-rewrite-rules

    if flag(neon)
      cpp-options: -DUSING_VECTORS_NEON

    main-is: codegen.hs
    build-depends:
        base >=4.8.0.0 && <5,
        containers >=0.2.7.0,
        template-haskell >=2.10.0.0,
        filepath >=1.4.0.0,
        directory >=1.2.2.0
    default-language: Haskell2010
    hs-source-dirs: codegen
    other-modules:
        Llvm
        Llvm.Arch.CodeAMD64
        Llvm.BaseClass
        Llvm.Expression
        Llvm.Function
        Llvm.ProgramMonad
        Llvm.Numbers

